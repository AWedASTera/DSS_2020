// source: search.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.com.hronosf.search.IdSearchRequestDTO', null, global);
goog.exportSymbol('proto.com.hronosf.search.IdSearchResponseDTO', null, global);
goog.exportSymbol('proto.com.hronosf.search.ObjectToRelation', null, global);
goog.exportSymbol('proto.com.hronosf.search.TestSearchRequestDTO', null, global);
goog.exportSymbol('proto.com.hronosf.search.TextSearchResponseDTO', null, global);
goog.exportSymbol('proto.com.hronosf.search.WallPost', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.hronosf.search.TestSearchRequestDTO = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.hronosf.search.TestSearchRequestDTO, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.hronosf.search.TestSearchRequestDTO.displayName = 'proto.com.hronosf.search.TestSearchRequestDTO';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.hronosf.search.TextSearchResponseDTO = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.hronosf.search.TextSearchResponseDTO.repeatedFields_, null);
};
goog.inherits(proto.com.hronosf.search.TextSearchResponseDTO, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.hronosf.search.TextSearchResponseDTO.displayName = 'proto.com.hronosf.search.TextSearchResponseDTO';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.hronosf.search.IdSearchRequestDTO = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.hronosf.search.IdSearchRequestDTO, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.hronosf.search.IdSearchRequestDTO.displayName = 'proto.com.hronosf.search.IdSearchRequestDTO';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.hronosf.search.IdSearchResponseDTO = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.hronosf.search.IdSearchResponseDTO.repeatedFields_, null);
};
goog.inherits(proto.com.hronosf.search.IdSearchResponseDTO, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.hronosf.search.IdSearchResponseDTO.displayName = 'proto.com.hronosf.search.IdSearchResponseDTO';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.hronosf.search.WallPost = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.hronosf.search.WallPost.repeatedFields_, null);
};
goog.inherits(proto.com.hronosf.search.WallPost, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.hronosf.search.WallPost.displayName = 'proto.com.hronosf.search.WallPost';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.hronosf.search.ObjectToRelation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.hronosf.search.ObjectToRelation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.hronosf.search.ObjectToRelation.displayName = 'proto.com.hronosf.search.ObjectToRelation';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.hronosf.search.TestSearchRequestDTO.prototype.toObject = function(opt_includeInstance) {
  return proto.com.hronosf.search.TestSearchRequestDTO.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.hronosf.search.TestSearchRequestDTO} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.hronosf.search.TestSearchRequestDTO.toObject = function(includeInstance, msg) {
  var f, obj = {
    texttosearch: jspb.Message.getFieldWithDefault(msg, 1, ""),
    page: jspb.Message.getFieldWithDefault(msg, 2, 0),
    size: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.hronosf.search.TestSearchRequestDTO}
 */
proto.com.hronosf.search.TestSearchRequestDTO.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.hronosf.search.TestSearchRequestDTO;
  return proto.com.hronosf.search.TestSearchRequestDTO.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.hronosf.search.TestSearchRequestDTO} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.hronosf.search.TestSearchRequestDTO}
 */
proto.com.hronosf.search.TestSearchRequestDTO.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTexttosearch(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.hronosf.search.TestSearchRequestDTO.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.hronosf.search.TestSearchRequestDTO.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.hronosf.search.TestSearchRequestDTO} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.hronosf.search.TestSearchRequestDTO.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTexttosearch();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional string textToSearch = 1;
 * @return {string}
 */
proto.com.hronosf.search.TestSearchRequestDTO.prototype.getTexttosearch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.hronosf.search.TestSearchRequestDTO} returns this
 */
proto.com.hronosf.search.TestSearchRequestDTO.prototype.setTexttosearch = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 page = 2;
 * @return {number}
 */
proto.com.hronosf.search.TestSearchRequestDTO.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.hronosf.search.TestSearchRequestDTO} returns this
 */
proto.com.hronosf.search.TestSearchRequestDTO.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 size = 3;
 * @return {number}
 */
proto.com.hronosf.search.TestSearchRequestDTO.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.hronosf.search.TestSearchRequestDTO} returns this
 */
proto.com.hronosf.search.TestSearchRequestDTO.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.hronosf.search.TextSearchResponseDTO.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.hronosf.search.TextSearchResponseDTO.prototype.toObject = function(opt_includeInstance) {
  return proto.com.hronosf.search.TextSearchResponseDTO.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.hronosf.search.TextSearchResponseDTO} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.hronosf.search.TextSearchResponseDTO.toObject = function(includeInstance, msg) {
  var f, obj = {
    contentList: jspb.Message.toObjectList(msg.getContentList(),
    proto.com.hronosf.search.WallPost.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.hronosf.search.TextSearchResponseDTO}
 */
proto.com.hronosf.search.TextSearchResponseDTO.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.hronosf.search.TextSearchResponseDTO;
  return proto.com.hronosf.search.TextSearchResponseDTO.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.hronosf.search.TextSearchResponseDTO} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.hronosf.search.TextSearchResponseDTO}
 */
proto.com.hronosf.search.TextSearchResponseDTO.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.hronosf.search.WallPost;
      reader.readMessage(value,proto.com.hronosf.search.WallPost.deserializeBinaryFromReader);
      msg.addContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.hronosf.search.TextSearchResponseDTO.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.hronosf.search.TextSearchResponseDTO.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.hronosf.search.TextSearchResponseDTO} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.hronosf.search.TextSearchResponseDTO.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContentList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.com.hronosf.search.WallPost.serializeBinaryToWriter
    );
  }
};


/**
 * repeated WallPost content = 1;
 * @return {!Array<!proto.com.hronosf.search.WallPost>}
 */
proto.com.hronosf.search.TextSearchResponseDTO.prototype.getContentList = function() {
  return /** @type{!Array<!proto.com.hronosf.search.WallPost>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.hronosf.search.WallPost, 1));
};


/**
 * @param {!Array<!proto.com.hronosf.search.WallPost>} value
 * @return {!proto.com.hronosf.search.TextSearchResponseDTO} returns this
*/
proto.com.hronosf.search.TextSearchResponseDTO.prototype.setContentList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.hronosf.search.WallPost=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.hronosf.search.WallPost}
 */
proto.com.hronosf.search.TextSearchResponseDTO.prototype.addContent = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.hronosf.search.WallPost, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.hronosf.search.TextSearchResponseDTO} returns this
 */
proto.com.hronosf.search.TextSearchResponseDTO.prototype.clearContentList = function() {
  return this.setContentList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.hronosf.search.IdSearchRequestDTO.prototype.toObject = function(opt_includeInstance) {
  return proto.com.hronosf.search.IdSearchRequestDTO.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.hronosf.search.IdSearchRequestDTO} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.hronosf.search.IdSearchRequestDTO.toObject = function(includeInstance, msg) {
  var f, obj = {
    idtosearch: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.hronosf.search.IdSearchRequestDTO}
 */
proto.com.hronosf.search.IdSearchRequestDTO.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.hronosf.search.IdSearchRequestDTO;
  return proto.com.hronosf.search.IdSearchRequestDTO.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.hronosf.search.IdSearchRequestDTO} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.hronosf.search.IdSearchRequestDTO}
 */
proto.com.hronosf.search.IdSearchRequestDTO.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdtosearch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.hronosf.search.IdSearchRequestDTO.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.hronosf.search.IdSearchRequestDTO.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.hronosf.search.IdSearchRequestDTO} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.hronosf.search.IdSearchRequestDTO.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdtosearch();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string idToSearch = 1;
 * @return {string}
 */
proto.com.hronosf.search.IdSearchRequestDTO.prototype.getIdtosearch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.hronosf.search.IdSearchRequestDTO} returns this
 */
proto.com.hronosf.search.IdSearchRequestDTO.prototype.setIdtosearch = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.hronosf.search.IdSearchResponseDTO.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.hronosf.search.IdSearchResponseDTO.prototype.toObject = function(opt_includeInstance) {
  return proto.com.hronosf.search.IdSearchResponseDTO.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.hronosf.search.IdSearchResponseDTO} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.hronosf.search.IdSearchResponseDTO.toObject = function(includeInstance, msg) {
  var f, obj = {
    fromid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    signerid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    relationmapList: jspb.Message.toObjectList(msg.getRelationmapList(),
    proto.com.hronosf.search.ObjectToRelation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.hronosf.search.IdSearchResponseDTO}
 */
proto.com.hronosf.search.IdSearchResponseDTO.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.hronosf.search.IdSearchResponseDTO;
  return proto.com.hronosf.search.IdSearchResponseDTO.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.hronosf.search.IdSearchResponseDTO} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.hronosf.search.IdSearchResponseDTO}
 */
proto.com.hronosf.search.IdSearchResponseDTO.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFromid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSignerid(value);
      break;
    case 3:
      var value = new proto.com.hronosf.search.ObjectToRelation;
      reader.readMessage(value,proto.com.hronosf.search.ObjectToRelation.deserializeBinaryFromReader);
      msg.addRelationmap(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.hronosf.search.IdSearchResponseDTO.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.hronosf.search.IdSearchResponseDTO.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.hronosf.search.IdSearchResponseDTO} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.hronosf.search.IdSearchResponseDTO.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFromid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getSignerid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getRelationmapList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.com.hronosf.search.ObjectToRelation.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 fromId = 1;
 * @return {number}
 */
proto.com.hronosf.search.IdSearchResponseDTO.prototype.getFromid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.hronosf.search.IdSearchResponseDTO} returns this
 */
proto.com.hronosf.search.IdSearchResponseDTO.prototype.setFromid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 signerId = 2;
 * @return {number}
 */
proto.com.hronosf.search.IdSearchResponseDTO.prototype.getSignerid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.hronosf.search.IdSearchResponseDTO} returns this
 */
proto.com.hronosf.search.IdSearchResponseDTO.prototype.setSignerid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated ObjectToRelation relationMap = 3;
 * @return {!Array<!proto.com.hronosf.search.ObjectToRelation>}
 */
proto.com.hronosf.search.IdSearchResponseDTO.prototype.getRelationmapList = function() {
  return /** @type{!Array<!proto.com.hronosf.search.ObjectToRelation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.hronosf.search.ObjectToRelation, 3));
};


/**
 * @param {!Array<!proto.com.hronosf.search.ObjectToRelation>} value
 * @return {!proto.com.hronosf.search.IdSearchResponseDTO} returns this
*/
proto.com.hronosf.search.IdSearchResponseDTO.prototype.setRelationmapList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.com.hronosf.search.ObjectToRelation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.hronosf.search.ObjectToRelation}
 */
proto.com.hronosf.search.IdSearchResponseDTO.prototype.addRelationmap = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.com.hronosf.search.ObjectToRelation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.hronosf.search.IdSearchResponseDTO} returns this
 */
proto.com.hronosf.search.IdSearchResponseDTO.prototype.clearRelationmapList = function() {
  return this.setRelationmapList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.hronosf.search.WallPost.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.hronosf.search.WallPost.prototype.toObject = function(opt_includeInstance) {
  return proto.com.hronosf.search.WallPost.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.hronosf.search.WallPost} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.hronosf.search.WallPost.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fromid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    ownerid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    signerid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    text: jspb.Message.getFieldWithDefault(msg, 5, ""),
    edited: jspb.Message.getFieldWithDefault(msg, 6, 0),
    date: jspb.Message.getFieldWithDefault(msg, 7, 0),
    summary: jspb.Message.getFieldWithDefault(msg, 8, ""),
    processedin: jspb.Message.getFieldWithDefault(msg, 9, 0),
    relationmapList: jspb.Message.toObjectList(msg.getRelationmapList(),
    proto.com.hronosf.search.ObjectToRelation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.hronosf.search.WallPost}
 */
proto.com.hronosf.search.WallPost.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.hronosf.search.WallPost;
  return proto.com.hronosf.search.WallPost.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.hronosf.search.WallPost} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.hronosf.search.WallPost}
 */
proto.com.hronosf.search.WallPost.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFromid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOwnerid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSignerid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEdited(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDate(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setSummary(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setProcessedin(value);
      break;
    case 10:
      var value = new proto.com.hronosf.search.ObjectToRelation;
      reader.readMessage(value,proto.com.hronosf.search.ObjectToRelation.deserializeBinaryFromReader);
      msg.addRelationmap(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.hronosf.search.WallPost.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.hronosf.search.WallPost.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.hronosf.search.WallPost} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.hronosf.search.WallPost.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFromid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getOwnerid();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getSignerid();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getEdited();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getDate();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getSummary();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getProcessedin();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getRelationmapList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.com.hronosf.search.ObjectToRelation.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.com.hronosf.search.WallPost.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.hronosf.search.WallPost} returns this
 */
proto.com.hronosf.search.WallPost.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 fromId = 2;
 * @return {number}
 */
proto.com.hronosf.search.WallPost.prototype.getFromid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.hronosf.search.WallPost} returns this
 */
proto.com.hronosf.search.WallPost.prototype.setFromid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 ownerId = 3;
 * @return {number}
 */
proto.com.hronosf.search.WallPost.prototype.getOwnerid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.hronosf.search.WallPost} returns this
 */
proto.com.hronosf.search.WallPost.prototype.setOwnerid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 signerId = 4;
 * @return {number}
 */
proto.com.hronosf.search.WallPost.prototype.getSignerid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.hronosf.search.WallPost} returns this
 */
proto.com.hronosf.search.WallPost.prototype.setSignerid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string text = 5;
 * @return {string}
 */
proto.com.hronosf.search.WallPost.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.hronosf.search.WallPost} returns this
 */
proto.com.hronosf.search.WallPost.prototype.setText = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int64 edited = 6;
 * @return {number}
 */
proto.com.hronosf.search.WallPost.prototype.getEdited = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.hronosf.search.WallPost} returns this
 */
proto.com.hronosf.search.WallPost.prototype.setEdited = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 date = 7;
 * @return {number}
 */
proto.com.hronosf.search.WallPost.prototype.getDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.hronosf.search.WallPost} returns this
 */
proto.com.hronosf.search.WallPost.prototype.setDate = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string summary = 8;
 * @return {string}
 */
proto.com.hronosf.search.WallPost.prototype.getSummary = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.hronosf.search.WallPost} returns this
 */
proto.com.hronosf.search.WallPost.prototype.setSummary = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional int64 processedIn = 9;
 * @return {number}
 */
proto.com.hronosf.search.WallPost.prototype.getProcessedin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.hronosf.search.WallPost} returns this
 */
proto.com.hronosf.search.WallPost.prototype.setProcessedin = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * repeated ObjectToRelation relationMap = 10;
 * @return {!Array<!proto.com.hronosf.search.ObjectToRelation>}
 */
proto.com.hronosf.search.WallPost.prototype.getRelationmapList = function() {
  return /** @type{!Array<!proto.com.hronosf.search.ObjectToRelation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.hronosf.search.ObjectToRelation, 10));
};


/**
 * @param {!Array<!proto.com.hronosf.search.ObjectToRelation>} value
 * @return {!proto.com.hronosf.search.WallPost} returns this
*/
proto.com.hronosf.search.WallPost.prototype.setRelationmapList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.com.hronosf.search.ObjectToRelation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.hronosf.search.ObjectToRelation}
 */
proto.com.hronosf.search.WallPost.prototype.addRelationmap = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.com.hronosf.search.ObjectToRelation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.hronosf.search.WallPost} returns this
 */
proto.com.hronosf.search.WallPost.prototype.clearRelationmapList = function() {
  return this.setRelationmapList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.hronosf.search.ObjectToRelation.prototype.toObject = function(opt_includeInstance) {
  return proto.com.hronosf.search.ObjectToRelation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.hronosf.search.ObjectToRelation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.hronosf.search.ObjectToRelation.toObject = function(includeInstance, msg) {
  var f, obj = {
    object: jspb.Message.getFieldWithDefault(msg, 1, ""),
    relation: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.hronosf.search.ObjectToRelation}
 */
proto.com.hronosf.search.ObjectToRelation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.hronosf.search.ObjectToRelation;
  return proto.com.hronosf.search.ObjectToRelation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.hronosf.search.ObjectToRelation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.hronosf.search.ObjectToRelation}
 */
proto.com.hronosf.search.ObjectToRelation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setObject(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRelation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.hronosf.search.ObjectToRelation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.hronosf.search.ObjectToRelation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.hronosf.search.ObjectToRelation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.hronosf.search.ObjectToRelation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRelation();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string object = 1;
 * @return {string}
 */
proto.com.hronosf.search.ObjectToRelation.prototype.getObject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.hronosf.search.ObjectToRelation} returns this
 */
proto.com.hronosf.search.ObjectToRelation.prototype.setObject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string relation = 2;
 * @return {string}
 */
proto.com.hronosf.search.ObjectToRelation.prototype.getRelation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.hronosf.search.ObjectToRelation} returns this
 */
proto.com.hronosf.search.ObjectToRelation.prototype.setRelation = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.com.hronosf.search);
